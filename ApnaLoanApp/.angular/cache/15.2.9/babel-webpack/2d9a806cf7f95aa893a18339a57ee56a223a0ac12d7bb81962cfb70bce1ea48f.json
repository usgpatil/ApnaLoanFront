{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class EMICalculatorComponent {}\nEMICalculatorComponent.ɵfac = function EMICalculatorComponent_Factory(t) {\n  return new (t || EMICalculatorComponent)();\n};\nEMICalculatorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EMICalculatorComponent,\n  selectors: [[\"app-emi-calculator\"]],\n  decls: 0,\n  vars: 0,\n  template: function EMICalculatorComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,sBAAsB;AAAtBA,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAC;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["EMICalculatorComponent","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["G:\\FINAL PROJECT\\APNALOANdashboard\\ApnaLoanApp\\src\\app\\Components\\emi-calculator\\emi-calculator.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-emi-calculator',\n  templateUrl: './emi-calculator.component.html',\n  styleUrls: ['./emi-calculator.component.css']\n})\nexport class EMICalculatorComponent {\n\n}\n\n\n// import { Component } from '@angular/core';\n// import { FormBuilder, FormGroup } from '@angular/forms';\n// import { LabelType, Options } from 'ng5-slider';\n\n\n\n\n// @Component({\n//   selector: 'app-emicalculator',\n//   templateUrl: './emicalculator.component.html',\n//   styleUrls: ['./emicalculator.component.scss']\n// })\n// export class EMIcalculatorComponent \n// {\n\n//       filters: any;\n//       pemi = {\n//         value: \"25\"\n//       }\n//       remi = {\n//         value: \"8.5\"\n//       }\n//       temi = {\n//         value: \"20\"\n//       }\n//       memi = {\n//         value: \"240\"\n//       }\n\n//       query = {\n//         amount: \"\",\n//         interest: \"\",\n//         tenureYr: \"\",\n//         tenureMo: \"\"\n//       }\n\n//       result = {\n//         emi: \"\",\n//         interest: \"\",\n//         total: \"\"\n//       }\n//       yrToggel: boolean;\n//       poptions: Options = {\n//         floor: 1,\n//         ceil: 200,\n//         translate: (value: number, label: LabelType): string => {\n//           switch (label) {\n//             case LabelType.Low:\n//               return value + '<b>L</b>';\n//             case LabelType.High:\n//               return value + '<b>L</b>';\n//             default:\n//               return value + '<b>L</b>';\n//           }\n//         }\n//       };\n//       roptions: Options = {\n//         floor: 5,\n//         ceil: 20,\n//         translate: (value: number, label: LabelType): string => {\n//           switch (label) {\n//             case LabelType.Low:\n//               return value + '<b>%</b>';\n//             case LabelType.High:\n//               return value + '<b>%</b>';\n//             default:\n//               return value + '<b>%</b>';\n//           }\n//         }\n//       };\n//       toptions: Options = {\n//         floor: 1,\n//         ceil: 30,\n//         translate: (value: number, label: LabelType): string => {\n//           switch (label) {\n//             case LabelType.Low:\n//               return value + '<b>Yr</b>';\n//             case LabelType.High:\n//               return value + '<b>Yr</b>';\n//             default:\n//               return value + '<b>Yr</b>';\n//           }\n//         }\n//       };\n//       moptions: Options = {\n//         floor: 1,\n//         ceil: 360,\n//         translate: (value: number, label: LabelType): string => {\n//           switch (label) {\n//             case LabelType.Low:\n//               return value + '<b>Mo</b>';\n//             case LabelType.High:\n//               return value + '<b>Mo</b>';\n//             default:\n//               return value + '<b>Mo</b>';\n//           }\n//         }\n//       };\n//       constructor() {\n//         this.yrToggel = true;\n//       }\n\n//       ngAfterViewInit() {\n//         this.update();\n//       }\n\n//       tbupdate(id) {\n//         if (id == 0) {\n//           this.pemi.value = (Number(this.query.amount) / 100000).toString();\n//         }\n//         else if (id == 1) {\n//           this.remi.value = this.query.interest;\n//         }\n//         else if (id == 2) {\n//           this.temi.value = this.query.tenureYr;\n//         }\n//         else if (id == 3) {\n//           this.memi.value = this.query.tenureMo;\n//         }\n//         this.update();\n//       }\n\n//       update() {\n\n//         var loanAmount = Number(this.pemi.value) * 100000;\n//         var numberOfMonths = (this.yrToggel) ? (Number(this.temi.value) * 12) : Number(this.memi.value);\n//         var rateOfInterest = Number(this.remi.value);\n//         var monthlyInterestRatio = (rateOfInterest / 100) / 12;\n\n//         this.query.amount = loanAmount.toString();\n//         this.query.interest = rateOfInterest.toString();\n//         if (this.yrToggel) {\n//           this.query.tenureYr = this.temi.value.toString();\n//         }\n//         else {\n//           this.query.tenureMo = this.memi.value.toString();\n//         }\n\n//         var top = Math.pow((1 + monthlyInterestRatio), numberOfMonths);\n//         var bottom = top - 1;\n//         var sp = top / bottom;\n//         var emi = ((loanAmount * monthlyInterestRatio) * sp);\n//         var full = numberOfMonths * emi;\n//         var interest = full - loanAmount;\n//         var int_pge = (interest / full) * 100;\n\n//         this.result.emi = emi.toFixed(0).toString().replace(/,/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n//         var loanAmount_str = loanAmount.toString().replace(/,/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n//         this.result.total = full.toFixed(0).toString().replace(/,/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n//         this.result.interest = interest.toFixed(0).toString().replace(/,/g, \"\").replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n//       }\n\n// }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}